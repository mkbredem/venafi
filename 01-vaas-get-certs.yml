---
- name: Gather Venafi Cloud applications and certificates
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # === Required ===
    vaas_api_key: "{{ venafi_api_key }}"   # or inject via AAP credential as a variable
    tenant_base_url: "https://eval-85300634.venafi.cloud" # your tenant base
    global_api_url:  "https://api.venafi.cloud"
    validity_check: 7
    cert_name_search_phrase: mkbredem
    # Many APIs are also available under api.venafi.cloud; most tenants proxy on their base URL too.

    # === Tuning ===
    cert_limit: 1000
    cert_params: "ownershipTree=false&excludeSupersededInstances=false"

    target_domains:
      - mkbredem.com

  tasks:
    - name: Publish mbredeme appID and issuingTemplateId 
      ansible.builtin.set_stats:
        data:
          app_data:
              app_id: "db56a9b0-7980-11f0-9cc5-31c907dcc2e3"
              template_id: "e1d81b71-6e54-11f0-b1b4-9323192b9202" #defeault template

    # --- Certificates Needing Renewal ---
    # NOTE: This grabs up to results. If you have more, see 'Pagination' note below.
    - name: Search for certificates in Venafi Cloud
      ansible.builtin.uri:
        url: "https://api.venafi.cloud/outagedetection/v1/certificatesearch?ownershipTree=false&excludeSupersededInstances=false"
        method: POST
        headers:
          accept: "application/json"
          content-type: "application/json"
          tppl-api-key: "{{ vaas_api_key }}"
        body_format: json
        body:
          paging:
            pageNumber: 0
            pageSize: 100
          expression:
            operator: "AND"
            operands:
              - field: "certificateName"
                operator: "FIND"
                value: "{{ cert_name_search_phrase }}"
              - field: "validityPeriodDays"
                operator: "LTE"
                value: "{{ validity_check }}"
              - field: "certificateStatus"
                operator: "MATCH"
                value: "ACTIVE"
        return_content: true
        status_code: 200
      register: vaas_certs

    - name: Show Venafi certificate search results
      ansible.builtin.debug:
        var: vaas_certs.json


    - name: Parse cert JSON (prefer .json, fall back to .content)
      ansible.builtin.set_fact:
        vaas_parsed_certs: "{{ vaas_certs.json | default(vaas_certs.content | from_json) }}"

    - name: List cert names
      ansible.builtin.debug:
        msg: "{{ vaas_parsed_certs.certificates | map(attribute='certificateName') | list }}"

    - name: Normalize cert list from response
      ansible.builtin.set_fact:
        cert_list: "{{ vaas_parsed_certs.get('certificates', vaas_parsed_certs.get('items', [])) }}"
    
    - name: Debug full cert objects where name contains "mkbredem" (pretty JSON)
      ansible.builtin.debug:
        msg: "{{ (cert_list | selectattr('certificateName', 'search', 'mkbredem') | list) | to_nice_json }}"

    - name: Publish refresh_certificates with all matching cert objects
      ansible.builtin.set_stats:
        data:
          refresh_certificates: >-
            {{
              cert_list
              | selectattr('certificateName', 'search', 'mkbredem')
              | list
            }}

    - name: Publish unique target_hosts from refresh_certificates
      ansible.builtin.set_stats:
        data:
          target_hosts: "{{ cert_list | map(attribute='certificateName') | list | unique }}"

    - name: Publish certificate ids to be retired
      ansible.builtin.set_stats:
        data:
          retire_certs: "{{ cert_list | map(attribute='id') | list }}"
#curl --request POST \
#     --url 'https://api.venafi.cloud/outagedetection/v1/certificatesearch?ownershipTree=false&excludeSupersededInstances=false' \
#     --header 'accept: application/json' \
#     --header 'content-type: application/json' \
#     --header 'tppl-api-key: 7aa4a121-3c3d-455f-9c4b-872a25c455f8' \
#     --data '
#{
#  "paging": {
#    "pageNumber": 0,
#    "pageSize": 10
#  },
#  "expression": {
#    "operands": [
#      {
#        "field": "certificateName",
#        "operator": "FIND",
#        "value": "mkbredem"
#      },
#      {
#        "field": "validityPeriodDays",
#        "operator": "LTE",
#        "value": "90"
#      },
#      {
#        "field": "versionType",
#        "value": "CURRENT",
#        "operator": "MATCH"
#      }
#    ],
#    "operator": "AND"
#  }
#}
#'